<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="421" width="10.9" height="15.0" fill="rgb(227,202,8)" rx="2" ry="2" />
<text  x="34.81" y="431.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.74%)</title><rect x="53.6" y="309" width="8.7" height="15.0" fill="rgb(231,112,17)" rx="2" ry="2" />
<text  x="56.62" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.18%)</title><rect x="415.7" y="597" width="2.2" height="15.0" fill="rgb(237,225,31)" rx="2" ry="2" />
<text  x="418.69" y="607.5" ></text>
</g>
<g >
<title>arch_call_rest_init (7 samples, 1.29%)</title><rect x="1174.7" y="629" width="15.3" height="15.0" fill="rgb(209,69,23)" rx="2" ry="2" />
<text  x="1177.73" y="639.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.18%)</title><rect x="49.3" y="645" width="2.1" height="15.0" fill="rgb(239,14,15)" rx="2" ry="2" />
<text  x="52.26" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="10.0" y="693" width="2.2" height="15.0" fill="rgb(235,17,22)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (16 samples, 2.96%)</title><rect x="978.4" y="453" width="34.9" height="15.0" fill="rgb(237,198,12)" rx="2" ry="2" />
<text  x="981.43" y="463.5" >x8..</text>
</g>
<g >
<title>_perf_ioctl (4 samples, 0.74%)</title><rect x="53.6" y="437" width="8.7" height="15.0" fill="rgb(212,5,33)" rx="2" ry="2" />
<text  x="56.62" y="447.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (18 samples, 3.33%)</title><rect x="976.2" y="581" width="39.3" height="15.0" fill="rgb(228,118,12)" rx="2" ry="2" />
<text  x="979.25" y="591.5" >cal..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.74%)</title><rect x="34.0" y="85" width="8.7" height="15.0" fill="rgb(250,198,9)" rx="2" ry="2" />
<text  x="36.99" y="95.5" ></text>
</g>
<g >
<title>perf (6 samples, 1.11%)</title><rect x="51.4" y="709" width="13.1" height="15.0" fill="rgb(249,37,18)" rx="2" ry="2" />
<text  x="54.44" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="44.9" y="693" width="2.2" height="15.0" fill="rgb(233,67,50)" rx="2" ry="2" />
<text  x="47.90" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.74%)</title><rect x="16.5" y="517" width="8.8" height="15.0" fill="rgb(237,214,42)" rx="2" ry="2" />
<text  x="19.54" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="947.9" y="661" width="2.2" height="15.0" fill="rgb(215,204,40)" rx="2" ry="2" />
<text  x="950.89" y="671.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.18%)</title><rect x="415.7" y="613" width="2.2" height="15.0" fill="rgb(226,225,19)" rx="2" ry="2" />
<text  x="418.69" y="623.5" ></text>
</g>
<g >
<title>_perf_event_enable (4 samples, 0.74%)</title><rect x="53.6" y="405" width="8.7" height="15.0" fill="rgb(209,26,43)" rx="2" ry="2" />
<text  x="56.62" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.18%)</title><rect x="415.7" y="629" width="2.2" height="15.0" fill="rgb(233,61,3)" rx="2" ry="2" />
<text  x="418.69" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.18%)</title><rect x="1168.2" y="613" width="2.2" height="15.0" fill="rgb(249,157,21)" rx="2" ry="2" />
<text  x="1171.19" y="623.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.74%)</title><rect x="16.5" y="597" width="8.8" height="15.0" fill="rgb(244,98,17)" rx="2" ry="2" />
<text  x="19.54" y="607.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.74%)</title><rect x="53.6" y="341" width="8.7" height="15.0" fill="rgb(237,4,5)" rx="2" ry="2" />
<text  x="56.62" y="351.5" ></text>
</g>
<g >
<title>GCThread_loopMaster (2 samples, 0.37%)</title><rect x="64.5" y="693" width="4.4" height="15.0" fill="rgb(243,26,46)" rx="2" ry="2" />
<text  x="67.53" y="703.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.18%)</title><rect x="49.3" y="661" width="2.1" height="15.0" fill="rgb(235,203,47)" rx="2" ry="2" />
<text  x="52.26" y="671.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.18%)</title><rect x="49.3" y="677" width="2.1" height="15.0" fill="rgb(245,185,50)" rx="2" ry="2" />
<text  x="52.26" y="687.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (7 samples, 1.29%)</title><rect x="1174.7" y="661" width="15.3" height="15.0" fill="rgb(232,80,27)" rx="2" ry="2" />
<text  x="1177.73" y="671.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.74%)</title><rect x="16.5" y="469" width="8.8" height="15.0" fill="rgb(245,112,26)" rx="2" ry="2" />
<text  x="19.54" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter (7 samples, 1.29%)</title><rect x="1174.7" y="549" width="15.3" height="15.0" fill="rgb(241,50,36)" rx="2" ry="2" />
<text  x="1177.73" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.18%)</title><rect x="12.2" y="597" width="2.2" height="15.0" fill="rgb(221,47,24)" rx="2" ry="2" />
<text  x="15.18" y="607.5" ></text>
</g>
<g >
<title>code (7 samples, 1.29%)</title><rect x="29.6" y="709" width="15.3" height="15.0" fill="rgb(225,126,26)" rx="2" ry="2" />
<text  x="32.63" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (4 samples, 0.74%)</title><rect x="53.6" y="501" width="8.7" height="15.0" fill="rgb(226,110,0)" rx="2" ry="2" />
<text  x="56.62" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.18%)</title><rect x="1157.3" y="597" width="2.2" height="15.0" fill="rgb(227,68,49)" rx="2" ry="2" />
<text  x="1160.28" y="607.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.37%)</title><rect x="433.1" y="517" width="4.4" height="15.0" fill="rgb(232,112,31)" rx="2" ry="2" />
<text  x="436.14" y="527.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="341" width="10.9" height="15.0" fill="rgb(218,112,18)" rx="2" ry="2" />
<text  x="34.81" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.74%)</title><rect x="34.0" y="37" width="8.7" height="15.0" fill="rgb(217,132,22)" rx="2" ry="2" />
<text  x="36.99" y="47.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.18%)</title><rect x="415.7" y="565" width="2.2" height="15.0" fill="rgb(243,128,41)" rx="2" ry="2" />
<text  x="418.69" y="575.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.18%)</title><rect x="1172.6" y="597" width="2.1" height="15.0" fill="rgb(216,33,21)" rx="2" ry="2" />
<text  x="1175.55" y="607.5" ></text>
</g>
<g >
<title>cpu_startup_entry (7 samples, 1.29%)</title><rect x="1174.7" y="597" width="15.3" height="15.0" fill="rgb(230,51,6)" rx="2" ry="2" />
<text  x="1177.73" y="607.5" ></text>
</g>
<g >
<title>rest_init (7 samples, 1.29%)</title><rect x="1174.7" y="613" width="15.3" height="15.0" fill="rgb(230,30,27)" rx="2" ry="2" />
<text  x="1177.73" y="623.5" ></text>
</g>
<g >
<title>start_secondary (96 samples, 17.74%)</title><rect x="965.3" y="677" width="209.4" height="15.0" fill="rgb(238,207,41)" rx="2" ry="2" />
<text  x="968.34" y="687.5" >start_secondary</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.74%)</title><rect x="34.0" y="69" width="8.7" height="15.0" fill="rgb(214,166,8)" rx="2" ry="2" />
<text  x="36.99" y="79.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.18%)</title><rect x="952.3" y="565" width="2.1" height="15.0" fill="rgb(226,123,16)" rx="2" ry="2" />
<text  x="955.26" y="575.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="597" width="13.1" height="15.0" fill="rgb(227,98,26)" rx="2" ry="2" />
<text  x="32.63" y="607.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="325" width="10.9" height="15.0" fill="rgb(209,156,49)" rx="2" ry="2" />
<text  x="34.81" y="335.5" ></text>
</g>
<g >
<title>release_task (1 samples, 0.18%)</title><rect x="956.6" y="581" width="2.2" height="15.0" fill="rgb(250,149,32)" rx="2" ry="2" />
<text  x="959.62" y="591.5" ></text>
</g>
<g >
<title>uv_run (6 samples, 1.11%)</title><rect x="29.6" y="629" width="13.1" height="15.0" fill="rgb(218,58,43)" rx="2" ry="2" />
<text  x="32.63" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.18%)</title><rect x="415.7" y="581" width="2.2" height="15.0" fill="rgb(208,136,12)" rx="2" ry="2" />
<text  x="418.69" y="591.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.74%)</title><rect x="1174.7" y="405" width="8.8" height="15.0" fill="rgb(240,200,23)" rx="2" ry="2" />
<text  x="1177.73" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 1.11%)</title><rect x="51.4" y="693" width="13.1" height="15.0" fill="rgb(223,13,47)" rx="2" ry="2" />
<text  x="54.44" y="703.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.18%)</title><rect x="1013.3" y="549" width="2.2" height="15.0" fill="rgb(248,182,31)" rx="2" ry="2" />
<text  x="1016.33" y="559.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.18%)</title><rect x="450.6" y="645" width="2.2" height="15.0" fill="rgb(243,185,10)" rx="2" ry="2" />
<text  x="453.59" y="655.5" ></text>
</g>
<g >
<title>[perf-30205.map] (1 samples, 0.18%)</title><rect x="27.4" y="677" width="2.2" height="15.0" fill="rgb(235,70,24)" rx="2" ry="2" />
<text  x="30.45" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.18%)</title><rect x="420.1" y="661" width="2.1" height="15.0" fill="rgb(231,86,50)" rx="2" ry="2" />
<text  x="423.06" y="671.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 0.55%)</title><rect x="952.3" y="661" width="6.5" height="15.0" fill="rgb(224,135,19)" rx="2" ry="2" />
<text  x="955.26" y="671.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.74%)</title><rect x="16.5" y="549" width="8.8" height="15.0" fill="rgb(216,110,48)" rx="2" ry="2" />
<text  x="19.54" y="559.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="277" width="10.9" height="15.0" fill="rgb(215,100,46)" rx="2" ry="2" />
<text  x="34.81" y="287.5" ></text>
</g>
<g >
<title>[libxul.so] (1 samples, 0.18%)</title><rect x="14.4" y="677" width="2.1" height="15.0" fill="rgb(219,4,30)" rx="2" ry="2" />
<text  x="17.36" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 1.11%)</title><rect x="51.4" y="677" width="13.1" height="15.0" fill="rgb(242,216,6)" rx="2" ry="2" />
<text  x="54.44" y="687.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.18%)</title><rect x="974.1" y="421" width="2.1" height="15.0" fill="rgb(254,59,23)" rx="2" ry="2" />
<text  x="977.07" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.92%)</title><rect x="31.8" y="197" width="10.9" height="15.0" fill="rgb(244,46,43)" rx="2" ry="2" />
<text  x="34.81" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (86 samples, 15.90%)</title><rect x="967.5" y="597" width="187.6" height="15.0" fill="rgb(226,225,50)" rx="2" ry="2" />
<text  x="970.52" y="607.5" >cpuidle_enter_state</text>
</g>
<g >
<title>schedule (3 samples, 0.55%)</title><rect x="433.1" y="565" width="6.6" height="15.0" fill="rgb(224,145,1)" rx="2" ry="2" />
<text  x="436.14" y="575.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.18%)</title><rect x="954.4" y="549" width="2.2" height="15.0" fill="rgb(218,65,35)" rx="2" ry="2" />
<text  x="957.44" y="559.5" ></text>
</g>
<g >
<title>swapper (104 samples, 19.22%)</title><rect x="963.2" y="709" width="226.8" height="15.0" fill="rgb(205,0,41)" rx="2" ry="2" />
<text  x="966.16" y="719.5" >swapper</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.92%)</title><rect x="31.8" y="181" width="10.9" height="15.0" fill="rgb(225,201,40)" rx="2" ry="2" />
<text  x="34.81" y="191.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.37%)</title><rect x="971.9" y="501" width="4.3" height="15.0" fill="rgb(249,73,8)" rx="2" ry="2" />
<text  x="974.89" y="511.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.18%)</title><rect x="12.2" y="501" width="2.2" height="15.0" fill="rgb(253,15,44)" rx="2" ry="2" />
<text  x="15.18" y="511.5" ></text>
</g>
<g >
<title>_SM2QSD11treatSignalL6SignaluEO (89 samples, 16.45%)</title><rect x="629.4" y="693" width="194.2" height="15.0" fill="rgb(227,203,4)" rx="2" ry="2" />
<text  x="632.45" y="703.5" >_SM2QSD11treatSignalL6Sig..</text>
</g>
<g >
<title>irq_work_run (1 samples, 0.18%)</title><rect x="31.8" y="149" width="2.2" height="15.0" fill="rgb(228,158,41)" rx="2" ry="2" />
<text  x="34.81" y="159.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.37%)</title><rect x="433.1" y="533" width="4.4" height="15.0" fill="rgb(239,78,14)" rx="2" ry="2" />
<text  x="436.14" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.74%)</title><rect x="53.6" y="261" width="8.7" height="15.0" fill="rgb(243,29,28)" rx="2" ry="2" />
<text  x="56.62" y="271.5" ></text>
</g>
<g >
<title>call_cpuidle (7 samples, 1.29%)</title><rect x="1174.7" y="565" width="15.3" height="15.0" fill="rgb(246,22,42)" rx="2" ry="2" />
<text  x="1177.73" y="575.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.74%)</title><rect x="16.5" y="581" width="8.8" height="15.0" fill="rgb(226,139,14)" rx="2" ry="2" />
<text  x="19.54" y="591.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.18%)</title><rect x="1172.6" y="581" width="2.1" height="15.0" fill="rgb(212,172,9)" rx="2" ry="2" />
<text  x="1175.55" y="591.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="405" width="10.9" height="15.0" fill="rgb(217,150,3)" rx="2" ry="2" />
<text  x="34.81" y="415.5" ></text>
</g>
<g >
<title>classloader-cac (1 samples, 0.18%)</title><rect x="27.4" y="709" width="2.2" height="15.0" fill="rgb(249,30,14)" rx="2" ry="2" />
<text  x="30.45" y="719.5" ></text>
</g>
<g >
<title>VM_Periodic_Tas (1 samples, 0.18%)</title><rect x="12.2" y="709" width="2.2" height="15.0" fill="rgb(206,47,27)" rx="2" ry="2" />
<text  x="15.18" y="719.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="261" width="10.9" height="15.0" fill="rgb(248,103,39)" rx="2" ry="2" />
<text  x="34.81" y="271.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.18%)</title><rect x="415.7" y="645" width="2.2" height="15.0" fill="rgb(253,78,11)" rx="2" ry="2" />
<text  x="418.69" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.18%)</title><rect x="1172.6" y="629" width="2.1" height="15.0" fill="rgb(234,130,11)" rx="2" ry="2" />
<text  x="1175.55" y="639.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.18%)</title><rect x="433.1" y="501" width="2.2" height="15.0" fill="rgb(214,183,35)" rx="2" ry="2" />
<text  x="436.14" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.92%)</title><rect x="31.8" y="165" width="10.9" height="15.0" fill="rgb(250,69,46)" rx="2" ry="2" />
<text  x="34.81" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.18%)</title><rect x="974.1" y="389" width="2.1" height="15.0" fill="rgb(233,32,14)" rx="2" ry="2" />
<text  x="977.07" y="399.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.18%)</title><rect x="433.1" y="485" width="2.2" height="15.0" fill="rgb(244,57,45)" rx="2" ry="2" />
<text  x="436.14" y="495.5" ></text>
</g>
<g >
<title>event_function (16 samples, 2.96%)</title><rect x="978.4" y="501" width="34.9" height="15.0" fill="rgb(227,165,52)" rx="2" ry="2" />
<text  x="981.43" y="511.5" >ev..</text>
</g>
<g >
<title>call_cpuidle (86 samples, 15.90%)</title><rect x="967.5" y="629" width="187.6" height="15.0" fill="rgb(227,67,53)" rx="2" ry="2" />
<text  x="970.52" y="639.5" >call_cpuidle</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.74%)</title><rect x="16.5" y="613" width="8.8" height="15.0" fill="rgb(218,99,27)" rx="2" ry="2" />
<text  x="19.54" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.37%)</title><rect x="971.9" y="549" width="4.3" height="15.0" fill="rgb(241,37,34)" rx="2" ry="2" />
<text  x="974.89" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="10.0" y="661" width="2.2" height="15.0" fill="rgb(222,222,33)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 25.69%)</title><rect x="114.7" y="677" width="303.2" height="15.0" fill="rgb(236,96,46)" rx="2" ry="2" />
<text  x="117.70" y="687.5" >[unknown]</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.74%)</title><rect x="53.6" y="277" width="8.7" height="15.0" fill="rgb(216,53,10)" rx="2" ry="2" />
<text  x="56.62" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__enable (5 samples, 0.92%)</title><rect x="51.4" y="565" width="10.9" height="15.0" fill="rgb(224,174,10)" rx="2" ry="2" />
<text  x="54.44" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.18%)</title><rect x="954.4" y="453" width="2.2" height="15.0" fill="rgb(213,146,7)" rx="2" ry="2" />
<text  x="957.44" y="463.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.74%)</title><rect x="34.0" y="101" width="8.7" height="15.0" fill="rgb(247,114,12)" rx="2" ry="2" />
<text  x="36.99" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="14.4" y="693" width="2.1" height="15.0" fill="rgb(230,119,40)" rx="2" ry="2" />
<text  x="17.36" y="703.5" ></text>
</g>
<g >
<title>__sched_yield (1 samples, 0.18%)</title><rect x="947.9" y="693" width="2.2" height="15.0" fill="rgb(251,220,19)" rx="2" ry="2" />
<text  x="950.89" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.74%)</title><rect x="1174.7" y="341" width="8.8" height="15.0" fill="rgb(213,198,35)" rx="2" ry="2" />
<text  x="1177.73" y="351.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="549" width="13.1" height="15.0" fill="rgb(209,79,51)" rx="2" ry="2" />
<text  x="32.63" y="559.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.18%)</title><rect x="1172.6" y="613" width="2.1" height="15.0" fill="rgb(241,58,5)" rx="2" ry="2" />
<text  x="1175.55" y="623.5" ></text>
</g>
<g >
<title>[scala-native-out] (139 samples, 25.69%)</title><rect x="114.7" y="693" width="303.2" height="15.0" fill="rgb(250,183,43)" rx="2" ry="2" />
<text  x="117.70" y="703.5" >[scala-native-out]</text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.74%)</title><rect x="53.6" y="373" width="8.7" height="15.0" fill="rgb(205,200,15)" rx="2" ry="2" />
<text  x="56.62" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 2.40%)</title><rect x="422.2" y="645" width="28.4" height="15.0" fill="rgb(220,54,44)" rx="2" ry="2" />
<text  x="425.24" y="655.5" >do..</text>
</g>
<g >
<title>do_futex_wait.constprop.1 (15 samples, 2.77%)</title><rect x="420.1" y="677" width="32.7" height="15.0" fill="rgb(233,89,7)" rx="2" ry="2" />
<text  x="423.06" y="687.5" >do..</text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="357" width="10.9" height="15.0" fill="rgb(212,31,20)" rx="2" ry="2" />
<text  x="34.81" y="367.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (5 samples, 0.92%)</title><rect x="31.8" y="485" width="10.9" height="15.0" fill="rgb(216,10,25)" rx="2" ry="2" />
<text  x="34.81" y="495.5" ></text>
</g>
<g >
<title>Marker_markPacket (2 samples, 0.37%)</title><rect x="71.1" y="693" width="4.3" height="15.0" fill="rgb(220,159,9)" rx="2" ry="2" />
<text  x="74.07" y="703.5" ></text>
</g>
<g >
<title>_SM2QSD11treatSignalL6SignaluEO (65 samples, 12.01%)</title><rect x="114.7" y="661" width="141.8" height="15.0" fill="rgb(234,13,51)" rx="2" ry="2" />
<text  x="117.70" y="671.5" >_SM2QSD11treatSign..</text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="613" width="13.1" height="15.0" fill="rgb(229,128,17)" rx="2" ry="2" />
<text  x="32.63" y="623.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.18%)</title><rect x="947.9" y="549" width="2.2" height="15.0" fill="rgb(232,69,35)" rx="2" ry="2" />
<text  x="950.89" y="559.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.18%)</title><rect x="954.4" y="421" width="2.2" height="15.0" fill="rgb(217,77,53)" rx="2" ry="2" />
<text  x="957.44" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64 (103 samples, 19.04%)</title><rect x="965.3" y="693" width="224.7" height="15.0" fill="rgb(250,59,19)" rx="2" ry="2" />
<text  x="968.34" y="703.5" >secondary_startup_64</text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.39 (1 samples, 0.18%)</title><rect x="62.3" y="597" width="2.2" height="15.0" fill="rgb(212,189,7)" rx="2" ry="2" />
<text  x="65.35" y="607.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.18%)</title><rect x="1157.3" y="565" width="2.2" height="15.0" fill="rgb(224,219,39)" rx="2" ry="2" />
<text  x="1160.28" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.37%)</title><rect x="971.9" y="565" width="4.3" height="15.0" fill="rgb(215,26,35)" rx="2" ry="2" />
<text  x="974.89" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.37%)</title><rect x="971.9" y="533" width="4.3" height="15.0" fill="rgb(233,153,5)" rx="2" ry="2" />
<text  x="974.89" y="543.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (7 samples, 1.29%)</title><rect x="1174.7" y="677" width="15.3" height="15.0" fill="rgb(206,161,22)" rx="2" ry="2" />
<text  x="1177.73" y="687.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.18%)</title><rect x="12.2" y="565" width="2.2" height="15.0" fill="rgb(248,41,15)" rx="2" ry="2" />
<text  x="15.18" y="575.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.18%)</title><rect x="950.1" y="645" width="2.2" height="15.0" fill="rgb(228,120,37)" rx="2" ry="2" />
<text  x="953.07" y="655.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="229" width="10.9" height="15.0" fill="rgb(211,205,45)" rx="2" ry="2" />
<text  x="34.81" y="239.5" ></text>
</g>
<g >
<title>_SM3GenD11treatSignalL6SignaluEO (19 samples, 3.51%)</title><rect x="823.6" y="693" width="41.4" height="15.0" fill="rgb(233,53,25)" rx="2" ry="2" />
<text  x="826.57" y="703.5" >_SM..</text>
</g>
<g >
<title>do_futex (10 samples, 1.85%)</title><rect x="428.8" y="613" width="21.8" height="15.0" fill="rgb(220,109,3)" rx="2" ry="2" />
<text  x="431.78" y="623.5" >d..</text>
</g>
<g >
<title>perf_ioctl (4 samples, 0.74%)</title><rect x="53.6" y="453" width="8.7" height="15.0" fill="rgb(246,140,45)" rx="2" ry="2" />
<text  x="56.62" y="463.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.18%)</title><rect x="974.1" y="405" width="2.1" height="15.0" fill="rgb(227,186,20)" rx="2" ry="2" />
<text  x="977.07" y="415.5" ></text>
</g>
<g >
<title>Allocator_newBlock (1 samples, 0.18%)</title><rect x="417.9" y="677" width="2.2" height="15.0" fill="rgb(206,29,35)" rx="2" ry="2" />
<text  x="420.87" y="687.5" ></text>
</g>
<g >
<title>event_function_call (4 samples, 0.74%)</title><rect x="53.6" y="389" width="8.7" height="15.0" fill="rgb(236,207,17)" rx="2" ry="2" />
<text  x="56.62" y="399.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="453" width="10.9" height="15.0" fill="rgb(238,74,45)" rx="2" ry="2" />
<text  x="34.81" y="463.5" ></text>
</g>
<g >
<title>do_idle (96 samples, 17.74%)</title><rect x="965.3" y="645" width="209.4" height="15.0" fill="rgb(209,27,14)" rx="2" ry="2" />
<text  x="968.34" y="655.5" >do_idle</text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.18%)</title><rect x="950.1" y="661" width="2.2" height="15.0" fill="rgb(216,128,51)" rx="2" ry="2" />
<text  x="953.07" y="671.5" ></text>
</g>
<g >
<title>Sweeper_Sweep (17 samples, 3.14%)</title><rect x="77.6" y="693" width="37.1" height="15.0" fill="rgb(210,179,36)" rx="2" ry="2" />
<text  x="80.62" y="703.5" >Swe..</text>
</g>
<g >
<title>evlist__enable (5 samples, 0.92%)</title><rect x="51.4" y="597" width="10.9" height="15.0" fill="rgb(207,196,2)" rx="2" ry="2" />
<text  x="54.44" y="607.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="645" width="13.1" height="15.0" fill="rgb(232,18,0)" rx="2" ry="2" />
<text  x="32.63" y="655.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="389" width="10.9" height="15.0" fill="rgb(215,35,40)" rx="2" ry="2" />
<text  x="34.81" y="399.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.18%)</title><rect x="954.4" y="565" width="2.2" height="15.0" fill="rgb(232,190,20)" rx="2" ry="2" />
<text  x="957.44" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.18%)</title><rect x="954.4" y="517" width="2.2" height="15.0" fill="rgb(214,18,20)" rx="2" ry="2" />
<text  x="957.44" y="527.5" ></text>
</g>
<g >
<title>plist_add (1 samples, 0.18%)</title><rect x="428.8" y="565" width="2.2" height="15.0" fill="rgb(254,155,28)" rx="2" ry="2" />
<text  x="431.78" y="575.5" ></text>
</g>
<g >
<title>run_builtin (6 samples, 1.11%)</title><rect x="51.4" y="629" width="13.1" height="15.0" fill="rgb(243,198,27)" rx="2" ry="2" />
<text  x="54.44" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.18%)</title><rect x="1157.3" y="581" width="2.2" height="15.0" fill="rgb(208,217,43)" rx="2" ry="2" />
<text  x="1160.28" y="591.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.18%)</title><rect x="12.2" y="693" width="2.2" height="15.0" fill="rgb(230,47,31)" rx="2" ry="2" />
<text  x="15.18" y="703.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.74%)</title><rect x="1174.7" y="437" width="8.8" height="15.0" fill="rgb(233,47,19)" rx="2" ry="2" />
<text  x="1177.73" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.18%)</title><rect x="49.3" y="565" width="2.1" height="15.0" fill="rgb(241,182,22)" rx="2" ry="2" />
<text  x="52.26" y="575.5" ></text>
</g>
<g >
<title>kworker/u16:3-e (1 samples, 0.18%)</title><rect x="49.3" y="709" width="2.1" height="15.0" fill="rgb(238,61,0)" rx="2" ry="2" />
<text  x="52.26" y="719.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.74%)</title><rect x="16.5" y="533" width="8.8" height="15.0" fill="rgb(233,34,51)" rx="2" ry="2" />
<text  x="19.54" y="543.5" ></text>
</g>
<g >
<title>ksys_ioctl (4 samples, 0.74%)</title><rect x="53.6" y="485" width="8.7" height="15.0" fill="rgb(251,58,9)" rx="2" ry="2" />
<text  x="56.62" y="495.5" ></text>
</g>
<g >
<title>_SM15MainSimulation$D4mainLAL16java.lang.String_uEO (78 samples, 14.42%)</title><rect x="459.3" y="693" width="170.1" height="15.0" fill="rgb(226,139,48)" rx="2" ry="2" />
<text  x="462.32" y="703.5" >_SM15MainSimulation$D4..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.74%)</title><rect x="1174.7" y="389" width="8.8" height="15.0" fill="rgb(229,145,1)" rx="2" ry="2" />
<text  x="1177.73" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.18%)</title><rect x="12.2" y="645" width="2.2" height="15.0" fill="rgb(250,117,29)" rx="2" ry="2" />
<text  x="15.18" y="655.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.92%)</title><rect x="16.5" y="677" width="10.9" height="15.0" fill="rgb(212,223,49)" rx="2" ry="2" />
<text  x="19.54" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="12.2" y="677" width="2.2" height="15.0" fill="rgb(236,167,39)" rx="2" ry="2" />
<text  x="15.18" y="687.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (18 samples, 3.33%)</title><rect x="976.2" y="565" width="39.3" height="15.0" fill="rgb(228,220,6)" rx="2" ry="2" />
<text  x="979.25" y="575.5" >smp..</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.18%)</title><rect x="435.3" y="501" width="2.2" height="15.0" fill="rgb(221,36,49)" rx="2" ry="2" />
<text  x="438.32" y="511.5" ></text>
</g>
<g >
<title>firefox (2 samples, 0.37%)</title><rect x="44.9" y="709" width="4.4" height="15.0" fill="rgb(217,219,8)" rx="2" ry="2" />
<text  x="47.90" y="719.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 1.85%)</title><rect x="428.8" y="597" width="21.8" height="15.0" fill="rgb(246,87,32)" rx="2" ry="2" />
<text  x="431.78" y="607.5" >f..</text>
</g>
<g >
<title>deactivate_task (1 samples, 0.18%)</title><rect x="12.2" y="549" width="2.2" height="15.0" fill="rgb(225,167,1)" rx="2" ry="2" />
<text  x="15.18" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (16 samples, 2.96%)</title><rect x="978.4" y="405" width="34.9" height="15.0" fill="rgb(211,198,53)" rx="2" ry="2" />
<text  x="981.43" y="415.5" >na..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.18%)</title><rect x="433.1" y="469" width="2.2" height="15.0" fill="rgb(217,92,44)" rx="2" ry="2" />
<text  x="436.14" y="479.5" ></text>
</g>
<g >
<title>[libxul.so] (1 samples, 0.18%)</title><rect x="10.0" y="645" width="2.2" height="15.0" fill="rgb(246,77,40)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (17 samples, 3.14%)</title><rect x="976.2" y="533" width="37.1" height="15.0" fill="rgb(242,188,21)" rx="2" ry="2" />
<text  x="979.25" y="543.5" >flu..</text>
</g>
<g >
<title>[code] (1 samples, 0.18%)</title><rect x="42.7" y="677" width="2.2" height="15.0" fill="rgb(242,110,49)" rx="2" ry="2" />
<text  x="45.72" y="687.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.18%)</title><rect x="431.0" y="565" width="2.1" height="15.0" fill="rgb(225,128,15)" rx="2" ry="2" />
<text  x="433.96" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.18%)</title><rect x="947.9" y="613" width="2.2" height="15.0" fill="rgb(217,14,54)" rx="2" ry="2" />
<text  x="950.89" y="623.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.18%)</title><rect x="954.4" y="581" width="2.2" height="15.0" fill="rgb(254,118,35)" rx="2" ry="2" />
<text  x="957.44" y="591.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="533" width="13.1" height="15.0" fill="rgb(235,138,47)" rx="2" ry="2" />
<text  x="32.63" y="543.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (5 samples, 0.92%)</title><rect x="31.8" y="469" width="10.9" height="15.0" fill="rgb(220,87,36)" rx="2" ry="2" />
<text  x="34.81" y="479.5" ></text>
</g>
<g >
<title>Web_Content (5 samples, 0.92%)</title><rect x="16.5" y="709" width="10.9" height="15.0" fill="rgb(211,77,51)" rx="2" ry="2" />
<text  x="19.54" y="719.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="437" width="10.9" height="15.0" fill="rgb(241,196,43)" rx="2" ry="2" />
<text  x="34.81" y="447.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.18%)</title><rect x="62.3" y="581" width="2.2" height="15.0" fill="rgb(237,114,18)" rx="2" ry="2" />
<text  x="65.35" y="591.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.18%)</title><rect x="954.4" y="501" width="2.2" height="15.0" fill="rgb(206,14,7)" rx="2" ry="2" />
<text  x="957.44" y="511.5" ></text>
</g>
<g >
<title>futex_wait_setup (5 samples, 0.92%)</title><rect x="439.7" y="581" width="10.9" height="15.0" fill="rgb(242,157,46)" rx="2" ry="2" />
<text  x="442.69" y="591.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.18%)</title><rect x="950.1" y="613" width="2.2" height="15.0" fill="rgb(218,144,11)" rx="2" ry="2" />
<text  x="953.07" y="623.5" ></text>
</g>
<g >
<title>_SM11SignalList$G4load (3 samples, 0.55%)</title><rect x="452.8" y="693" width="6.5" height="15.0" fill="rgb(215,120,36)" rx="2" ry="2" />
<text  x="455.77" y="703.5" ></text>
</g>
<g >
<title>remote_function (16 samples, 2.96%)</title><rect x="978.4" y="517" width="34.9" height="15.0" fill="rgb(208,117,40)" rx="2" ry="2" />
<text  x="981.43" y="527.5" >re..</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.18%)</title><rect x="25.3" y="629" width="2.1" height="15.0" fill="rgb(219,88,44)" rx="2" ry="2" />
<text  x="28.27" y="639.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.18%)</title><rect x="954.4" y="533" width="2.2" height="15.0" fill="rgb(240,110,54)" rx="2" ry="2" />
<text  x="957.44" y="543.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.92%)</title><rect x="16.5" y="661" width="10.9" height="15.0" fill="rgb(206,79,18)" rx="2" ry="2" />
<text  x="19.54" y="671.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.18%)</title><rect x="31.8" y="133" width="2.2" height="15.0" fill="rgb(219,84,32)" rx="2" ry="2" />
<text  x="34.81" y="143.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.37%)</title><rect x="971.9" y="581" width="4.3" height="15.0" fill="rgb(230,44,49)" rx="2" ry="2" />
<text  x="974.89" y="591.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (4 samples, 0.74%)</title><rect x="53.6" y="469" width="8.7" height="15.0" fill="rgb(209,124,42)" rx="2" ry="2" />
<text  x="56.62" y="479.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.18%)</title><rect x="433.1" y="453" width="2.2" height="15.0" fill="rgb(225,33,48)" rx="2" ry="2" />
<text  x="436.14" y="463.5" ></text>
</g>
<g >
<title>main (6 samples, 1.11%)</title><rect x="51.4" y="661" width="13.1" height="15.0" fill="rgb(223,169,51)" rx="2" ry="2" />
<text  x="54.44" y="671.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.74%)</title><rect x="1159.5" y="613" width="8.7" height="15.0" fill="rgb(213,123,12)" rx="2" ry="2" />
<text  x="1162.46" y="623.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 1.11%)</title><rect x="29.6" y="693" width="13.1" height="15.0" fill="rgb(232,136,23)" rx="2" ry="2" />
<text  x="32.63" y="703.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.18%)</title><rect x="974.1" y="437" width="2.1" height="15.0" fill="rgb(220,169,37)" rx="2" ry="2" />
<text  x="977.07" y="447.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.37%)</title><rect x="1155.1" y="613" width="4.4" height="15.0" fill="rgb(240,116,32)" rx="2" ry="2" />
<text  x="1158.10" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.92%)</title><rect x="51.4" y="533" width="10.9" height="15.0" fill="rgb(224,97,24)" rx="2" ry="2" />
<text  x="54.44" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.74%)</title><rect x="16.5" y="501" width="8.8" height="15.0" fill="rgb(206,210,42)" rx="2" ry="2" />
<text  x="19.54" y="511.5" ></text>
</g>
<g >
<title>__GI___ioctl (5 samples, 0.92%)</title><rect x="51.4" y="549" width="10.9" height="15.0" fill="rgb(242,45,38)" rx="2" ry="2" />
<text  x="54.44" y="559.5" ></text>
</g>
<g >
<title>get_futex_key (5 samples, 0.92%)</title><rect x="439.7" y="565" width="10.9" height="15.0" fill="rgb(230,124,41)" rx="2" ry="2" />
<text  x="442.69" y="575.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 0.37%)</title><rect x="971.9" y="517" width="4.3" height="15.0" fill="rgb(215,80,42)" rx="2" ry="2" />
<text  x="974.89" y="527.5" ></text>
</g>
<g >
<title>add_device_randomness (1 samples, 0.18%)</title><rect x="956.6" y="565" width="2.2" height="15.0" fill="rgb(210,224,21)" rx="2" ry="2" />
<text  x="959.62" y="575.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.18%)</title><rect x="47.1" y="693" width="2.2" height="15.0" fill="rgb(215,93,3)" rx="2" ry="2" />
<text  x="50.08" y="703.5" ></text>
</g>
<g >
<title>ctx_resched (16 samples, 2.96%)</title><rect x="978.4" y="469" width="34.9" height="15.0" fill="rgb(206,189,53)" rx="2" ry="2" />
<text  x="981.43" y="479.5" >ct..</text>
</g>
<g >
<title>schedule_idle (5 samples, 0.92%)</title><rect x="1159.5" y="629" width="10.9" height="15.0" fill="rgb(228,193,9)" rx="2" ry="2" />
<text  x="1162.46" y="639.5" ></text>
</g>
<g >
<title>_mix_pool_bytes (1 samples, 0.18%)</title><rect x="956.6" y="549" width="2.2" height="15.0" fill="rgb(222,186,27)" rx="2" ry="2" />
<text  x="959.62" y="559.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.18%)</title><rect x="49.3" y="693" width="2.1" height="15.0" fill="rgb(252,33,52)" rx="2" ry="2" />
<text  x="52.26" y="703.5" ></text>
</g>
<g >
<title>intel_atomic_commit_work (1 samples, 0.18%)</title><rect x="49.3" y="629" width="2.1" height="15.0" fill="rgb(232,165,35)" rx="2" ry="2" />
<text  x="52.26" y="639.5" ></text>
</g>
<g >
<title>cpu_startup_entry (96 samples, 17.74%)</title><rect x="965.3" y="661" width="209.4" height="15.0" fill="rgb(244,31,16)" rx="2" ry="2" />
<text  x="968.34" y="671.5" >cpu_startup_entry</text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="661" width="13.1" height="15.0" fill="rgb(234,167,22)" rx="2" ry="2" />
<text  x="32.63" y="671.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.37%)</title><rect x="958.8" y="693" width="4.4" height="15.0" fill="rgb(238,72,38)" rx="2" ry="2" />
<text  x="961.80" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="947.9" y="677" width="2.2" height="15.0" fill="rgb(218,53,9)" rx="2" ry="2" />
<text  x="950.89" y="687.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.18%)</title><rect x="25.3" y="645" width="2.1" height="15.0" fill="rgb(240,193,37)" rx="2" ry="2" />
<text  x="28.27" y="655.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.74%)</title><rect x="34.0" y="117" width="8.7" height="15.0" fill="rgb(210,221,20)" rx="2" ry="2" />
<text  x="36.99" y="127.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 0.55%)</title><rect x="952.3" y="597" width="6.5" height="15.0" fill="rgb(217,100,30)" rx="2" ry="2" />
<text  x="955.26" y="607.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (1 samples, 0.18%)</title><rect x="1183.5" y="437" width="2.1" height="15.0" fill="rgb(239,50,40)" rx="2" ry="2" />
<text  x="1186.46" y="447.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="581" width="13.1" height="15.0" fill="rgb(221,7,52)" rx="2" ry="2" />
<text  x="32.63" y="591.5" ></text>
</g>
<g >
<title>wait_for_completion_timeout (1 samples, 0.18%)</title><rect x="49.3" y="581" width="2.1" height="15.0" fill="rgb(205,124,31)" rx="2" ry="2" />
<text  x="52.26" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.92%)</title><rect x="51.4" y="517" width="10.9" height="15.0" fill="rgb(209,66,25)" rx="2" ry="2" />
<text  x="54.44" y="527.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.74%)</title><rect x="34.0" y="133" width="8.7" height="15.0" fill="rgb(250,70,6)" rx="2" ry="2" />
<text  x="36.99" y="143.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.74%)</title><rect x="53.6" y="229" width="8.7" height="15.0" fill="rgb(215,187,44)" rx="2" ry="2" />
<text  x="56.62" y="239.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.74%)</title><rect x="53.6" y="325" width="8.7" height="15.0" fill="rgb(208,28,27)" rx="2" ry="2" />
<text  x="56.62" y="335.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.18%)</title><rect x="12.2" y="629" width="2.2" height="15.0" fill="rgb(247,135,25)" rx="2" ry="2" />
<text  x="15.18" y="639.5" ></text>
</g>
<g >
<title>intel_idle (2 samples, 0.37%)</title><rect x="1185.6" y="517" width="4.4" height="15.0" fill="rgb(224,82,26)" rx="2" ry="2" />
<text  x="1188.64" y="527.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.74%)</title><rect x="53.6" y="357" width="8.7" height="15.0" fill="rgb(211,83,14)" rx="2" ry="2" />
<text  x="56.62" y="367.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="245" width="10.9" height="15.0" fill="rgb(240,150,7)" rx="2" ry="2" />
<text  x="34.81" y="255.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.18%)</title><rect x="954.4" y="485" width="2.2" height="15.0" fill="rgb(253,30,54)" rx="2" ry="2" />
<text  x="957.44" y="495.5" ></text>
</g>
<g >
<title>[code] (6 samples, 1.11%)</title><rect x="29.6" y="565" width="13.1" height="15.0" fill="rgb(248,19,30)" rx="2" ry="2" />
<text  x="32.63" y="575.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (4 samples, 0.74%)</title><rect x="53.6" y="245" width="8.7" height="15.0" fill="rgb(237,143,9)" rx="2" ry="2" />
<text  x="56.62" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="27.4" y="693" width="2.2" height="15.0" fill="rgb(244,154,40)" rx="2" ry="2" />
<text  x="30.45" y="703.5" ></text>
</g>
<g >
<title>[libxul.so] (1 samples, 0.18%)</title><rect x="44.9" y="661" width="2.2" height="15.0" fill="rgb(220,185,47)" rx="2" ry="2" />
<text  x="47.90" y="671.5" ></text>
</g>
<g >
<title>get_signal (3 samples, 0.55%)</title><rect x="952.3" y="629" width="6.5" height="15.0" fill="rgb(231,152,6)" rx="2" ry="2" />
<text  x="955.26" y="639.5" ></text>
</g>
<g >
<title>do_sched_yield (1 samples, 0.18%)</title><rect x="947.9" y="629" width="2.2" height="15.0" fill="rgb(213,48,8)" rx="2" ry="2" />
<text  x="950.89" y="639.5" ></text>
</g>
<g >
<title>get_user_pages_fast (5 samples, 0.92%)</title><rect x="439.7" y="549" width="10.9" height="15.0" fill="rgb(238,104,53)" rx="2" ry="2" />
<text  x="442.69" y="559.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.18%)</title><rect x="950.1" y="629" width="2.2" height="15.0" fill="rgb(249,112,41)" rx="2" ry="2" />
<text  x="953.07" y="639.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.37%)</title><rect x="971.9" y="469" width="4.3" height="15.0" fill="rgb(236,107,20)" rx="2" ry="2" />
<text  x="974.89" y="479.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.74%)</title><rect x="16.5" y="645" width="8.8" height="15.0" fill="rgb(226,179,53)" rx="2" ry="2" />
<text  x="19.54" y="655.5" ></text>
</g>
<g >
<title>rcu_qs (1 samples, 0.18%)</title><rect x="1161.6" y="597" width="2.2" height="15.0" fill="rgb(218,38,51)" rx="2" ry="2" />
<text  x="1164.65" y="607.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.74%)</title><rect x="16.5" y="565" width="8.8" height="15.0" fill="rgb(234,205,50)" rx="2" ry="2" />
<text  x="19.54" y="575.5" ></text>
</g>
<g >
<title>gup_pgd_range (5 samples, 0.92%)</title><rect x="439.7" y="533" width="10.9" height="15.0" fill="rgb(225,162,22)" rx="2" ry="2" />
<text  x="442.69" y="543.5" ></text>
</g>
<g >
<title>do_signal (3 samples, 0.55%)</title><rect x="952.3" y="645" width="6.5" height="15.0" fill="rgb(241,7,29)" rx="2" ry="2" />
<text  x="955.26" y="655.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (4 samples, 0.74%)</title><rect x="34.0" y="53" width="8.7" height="15.0" fill="rgb(217,147,13)" rx="2" ry="2" />
<text  x="36.99" y="63.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.18%)</title><rect x="12.2" y="581" width="2.2" height="15.0" fill="rgb(251,152,30)" rx="2" ry="2" />
<text  x="15.18" y="591.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.74%)</title><rect x="16.5" y="629" width="8.8" height="15.0" fill="rgb(239,161,41)" rx="2" ry="2" />
<text  x="19.54" y="639.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="517" width="10.9" height="15.0" fill="rgb(207,46,26)" rx="2" ry="2" />
<text  x="34.81" y="527.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.18%)</title><rect x="1159.5" y="597" width="2.1" height="15.0" fill="rgb(231,218,7)" rx="2" ry="2" />
<text  x="1162.46" y="607.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (4 samples, 0.74%)</title><rect x="16.5" y="485" width="8.8" height="15.0" fill="rgb(250,104,1)" rx="2" ry="2" />
<text  x="19.54" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.18%)</title><rect x="44.9" y="677" width="2.2" height="15.0" fill="rgb(252,182,46)" rx="2" ry="2" />
<text  x="47.90" y="687.5" ></text>
</g>
<g >
<title>_SM7Global$G4load (17 samples, 3.14%)</title><rect x="865.0" y="693" width="37.1" height="15.0" fill="rgb(227,192,48)" rx="2" ry="2" />
<text  x="868.01" y="703.5" >_SM..</text>
</g>
<g >
<title>release_pages (1 samples, 0.18%)</title><rect x="954.4" y="469" width="2.2" height="15.0" fill="rgb(241,203,24)" rx="2" ry="2" />
<text  x="957.44" y="479.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 2.96%)</title><rect x="417.9" y="693" width="34.9" height="15.0" fill="rgb(229,156,15)" rx="2" ry="2" />
<text  x="420.87" y="703.5" >[u..</text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.92%)</title><rect x="1174.7" y="517" width="10.9" height="15.0" fill="rgb(243,198,16)" rx="2" ry="2" />
<text  x="1177.73" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.18%)</title><rect x="947.9" y="581" width="2.2" height="15.0" fill="rgb(238,49,22)" rx="2" ry="2" />
<text  x="950.89" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (1 samples, 0.18%)</title><rect x="947.9" y="645" width="2.2" height="15.0" fill="rgb(209,31,4)" rx="2" ry="2" />
<text  x="950.89" y="655.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.74%)</title><rect x="53.6" y="293" width="8.7" height="15.0" fill="rgb(250,53,34)" rx="2" ry="2" />
<text  x="56.62" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (4 samples, 0.74%)</title><rect x="1174.7" y="357" width="8.8" height="15.0" fill="rgb(254,199,47)" rx="2" ry="2" />
<text  x="1177.73" y="367.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.18%)</title><rect x="12.2" y="613" width="2.2" height="15.0" fill="rgb(213,114,45)" rx="2" ry="2" />
<text  x="15.18" y="623.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (16 samples, 2.96%)</title><rect x="978.4" y="421" width="34.9" height="15.0" fill="rgb(218,178,30)" rx="2" ry="2" />
<text  x="981.43" y="431.5" >__..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.18%)</title><rect x="950.1" y="581" width="2.2" height="15.0" fill="rgb(218,96,28)" rx="2" ry="2" />
<text  x="953.07" y="591.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.74%)</title><rect x="34.0" y="149" width="8.7" height="15.0" fill="rgb(218,80,8)" rx="2" ry="2" />
<text  x="36.99" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 1.11%)</title><rect x="29.6" y="677" width="13.1" height="15.0" fill="rgb(231,82,14)" rx="2" ry="2" />
<text  x="32.63" y="687.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.92%)</title><rect x="1174.7" y="501" width="10.9" height="15.0" fill="rgb(241,169,49)" rx="2" ry="2" />
<text  x="1177.73" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.74%)</title><rect x="950.1" y="677" width="8.7" height="15.0" fill="rgb(230,68,12)" rx="2" ry="2" />
<text  x="953.07" y="687.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.18%)</title><rect x="42.7" y="693" width="2.2" height="15.0" fill="rgb(211,216,49)" rx="2" ry="2" />
<text  x="45.72" y="703.5" ></text>
</g>
<g >
<title>scala-native-ou (412 samples, 76.16%)</title><rect x="64.5" y="709" width="898.7" height="15.0" fill="rgb(216,165,48)" rx="2" ry="2" />
<text  x="67.53" y="719.5" >scala-native-ou</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.74%)</title><rect x="950.1" y="693" width="8.7" height="15.0" fill="rgb(228,229,21)" rx="2" ry="2" />
<text  x="953.07" y="703.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.92%)</title><rect x="1174.7" y="485" width="10.9" height="15.0" fill="rgb(221,84,0)" rx="2" ry="2" />
<text  x="1177.73" y="495.5" ></text>
</g>
<g >
<title>[libxul.so] (1 samples, 0.18%)</title><rect x="10.0" y="677" width="2.2" height="15.0" fill="rgb(246,42,1)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (4 samples, 0.74%)</title><rect x="53.6" y="421" width="8.7" height="15.0" fill="rgb(219,93,49)" rx="2" ry="2" />
<text  x="56.62" y="431.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.92%)</title><rect x="16.5" y="693" width="10.9" height="15.0" fill="rgb(232,204,6)" rx="2" ry="2" />
<text  x="19.54" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.18%)</title><rect x="963.2" y="693" width="2.1" height="15.0" fill="rgb(207,62,47)" rx="2" ry="2" />
<text  x="966.16" y="703.5" ></text>
</g>
<g >
<title>intel_atomic_commit_tail (1 samples, 0.18%)</title><rect x="49.3" y="613" width="2.1" height="15.0" fill="rgb(227,69,14)" rx="2" ry="2" />
<text  x="52.26" y="623.5" ></text>
</g>
<g >
<title>_SM3GenD11treatSignalL6SignaluEO (74 samples, 13.68%)</title><rect x="256.5" y="661" width="161.4" height="15.0" fill="rgb(232,74,47)" rx="2" ry="2" />
<text  x="259.47" y="671.5" >_SM3GenD11treatSigna..</text>
</g>
<g >
<title>drm_atomic_helper_wait_for_flip_done (1 samples, 0.18%)</title><rect x="49.3" y="597" width="2.1" height="15.0" fill="rgb(207,48,31)" rx="2" ry="2" />
<text  x="52.26" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20 samples, 3.70%)</title><rect x="902.1" y="693" width="43.6" height="15.0" fill="rgb(227,203,4)" rx="2" ry="2" />
<text  x="905.09" y="703.5" >__me..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 2.59%)</title><rect x="422.2" y="661" width="30.6" height="15.0" fill="rgb(218,105,37)" rx="2" ry="2" />
<text  x="425.24" y="671.5" >en..</text>
</g>
<g >
<title>__schedule (1 samples, 0.18%)</title><rect x="947.9" y="597" width="2.2" height="15.0" fill="rgb(210,39,48)" rx="2" ry="2" />
<text  x="950.89" y="607.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.18%)</title><rect x="62.3" y="565" width="2.2" height="15.0" fill="rgb(254,89,7)" rx="2" ry="2" />
<text  x="65.35" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.18%)</title><rect x="1170.4" y="629" width="2.2" height="15.0" fill="rgb(220,116,29)" rx="2" ry="2" />
<text  x="1173.37" y="639.5" ></text>
</g>
<g >
<title>intel_idle (64 samples, 11.83%)</title><rect x="1015.5" y="581" width="139.6" height="15.0" fill="rgb(251,28,6)" rx="2" ry="2" />
<text  x="1018.51" y="591.5" >intel_idle</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.74%)</title><rect x="1174.7" y="421" width="8.8" height="15.0" fill="rgb(219,172,22)" rx="2" ry="2" />
<text  x="1177.73" y="431.5" ></text>
</g>
<g >
<title>Heap_GrowIfNeeded (1 samples, 0.18%)</title><rect x="68.9" y="693" width="2.2" height="15.0" fill="rgb(212,78,19)" rx="2" ry="2" />
<text  x="71.89" y="703.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="293" width="10.9" height="15.0" fill="rgb(240,39,45)" rx="2" ry="2" />
<text  x="34.81" y="303.5" ></text>
</g>
<g >
<title>[perf-13134.map] (5 samples, 0.92%)</title><rect x="31.8" y="309" width="10.9" height="15.0" fill="rgb(251,129,4)" rx="2" ry="2" />
<text  x="34.81" y="319.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.18%)</title><rect x="12.2" y="517" width="2.2" height="15.0" fill="rgb(212,155,42)" rx="2" ry="2" />
<text  x="15.18" y="527.5" ></text>
</g>
<g >
<title>Sweeper_LazyCoalesce (1 samples, 0.18%)</title><rect x="75.4" y="693" width="2.2" height="15.0" fill="rgb(205,12,8)" rx="2" ry="2" />
<text  x="78.43" y="703.5" ></text>
</g>
<g >
<title>evsel__enable (5 samples, 0.92%)</title><rect x="51.4" y="581" width="10.9" height="15.0" fill="rgb(254,25,50)" rx="2" ry="2" />
<text  x="54.44" y="591.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.18%)</title><rect x="952.3" y="581" width="2.1" height="15.0" fill="rgb(229,118,52)" rx="2" ry="2" />
<text  x="955.26" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 1.85%)</title><rect x="428.8" y="629" width="21.8" height="15.0" fill="rgb(217,212,8)" rx="2" ry="2" />
<text  x="431.78" y="639.5" >_..</text>
</g>
<g >
<title>do_group_exit (3 samples, 0.55%)</title><rect x="952.3" y="613" width="6.5" height="15.0" fill="rgb(212,118,21)" rx="2" ry="2" />
<text  x="955.26" y="623.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.92%)</title><rect x="428.8" y="581" width="10.9" height="15.0" fill="rgb(226,62,33)" rx="2" ry="2" />
<text  x="431.78" y="591.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (2 samples, 0.37%)</title><rect x="1163.8" y="597" width="4.4" height="15.0" fill="rgb(245,179,34)" rx="2" ry="2" />
<text  x="1166.83" y="607.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.92%)</title><rect x="31.8" y="213" width="10.9" height="15.0" fill="rgb(213,136,25)" rx="2" ry="2" />
<text  x="34.81" y="223.5" ></text>
</g>
<g >
<title>JS_Watchdog (1 samples, 0.18%)</title><rect x="10.0" y="709" width="2.2" height="15.0" fill="rgb(229,100,51)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="12.2" y="661" width="2.2" height="15.0" fill="rgb(232,49,0)" rx="2" ry="2" />
<text  x="15.18" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.18%)</title><rect x="437.5" y="533" width="2.2" height="15.0" fill="rgb(250,180,27)" rx="2" ry="2" />
<text  x="440.50" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.74%)</title><rect x="1174.7" y="373" width="8.8" height="15.0" fill="rgb(248,18,6)" rx="2" ry="2" />
<text  x="1177.73" y="383.5" ></text>
</g>
<g >
<title>all (541 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(230,198,32)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="373" width="10.9" height="15.0" fill="rgb(207,62,19)" rx="2" ry="2" />
<text  x="34.81" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (16 samples, 2.96%)</title><rect x="978.4" y="485" width="34.9" height="15.0" fill="rgb(217,107,12)" rx="2" ry="2" />
<text  x="981.43" y="495.5" >__..</text>
</g>
<g >
<title>handle_internal_command (6 samples, 1.11%)</title><rect x="51.4" y="645" width="13.1" height="15.0" fill="rgb(224,38,23)" rx="2" ry="2" />
<text  x="54.44" y="655.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.92%)</title><rect x="1174.7" y="453" width="10.9" height="15.0" fill="rgb(226,177,18)" rx="2" ry="2" />
<text  x="1177.73" y="463.5" ></text>
</g>
<g >
<title>do_idle (7 samples, 1.29%)</title><rect x="1174.7" y="581" width="15.3" height="15.0" fill="rgb(208,133,42)" rx="2" ry="2" />
<text  x="1177.73" y="591.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.18%)</title><rect x="12.2" y="533" width="2.2" height="15.0" fill="rgb(239,148,39)" rx="2" ry="2" />
<text  x="15.18" y="543.5" ></text>
</g>
<g >
<title>cmd_record (6 samples, 1.11%)</title><rect x="51.4" y="613" width="13.1" height="15.0" fill="rgb(211,150,6)" rx="2" ry="2" />
<text  x="54.44" y="623.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.18%)</title><rect x="954.4" y="437" width="2.2" height="15.0" fill="rgb(207,10,13)" rx="2" ry="2" />
<text  x="957.44" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (7 samples, 1.29%)</title><rect x="1174.7" y="533" width="15.3" height="15.0" fill="rgb(205,192,24)" rx="2" ry="2" />
<text  x="1177.73" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter (86 samples, 15.90%)</title><rect x="967.5" y="613" width="187.6" height="15.0" fill="rgb(239,127,54)" rx="2" ry="2" />
<text  x="970.52" y="623.5" >cpuidle_enter</text>
</g>
<g >
<title>activate_task (2 samples, 0.37%)</title><rect x="971.9" y="453" width="4.3" height="15.0" fill="rgb(244,35,12)" rx="2" ry="2" />
<text  x="974.89" y="463.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.18%)</title><rect x="947.9" y="565" width="2.2" height="15.0" fill="rgb(240,1,3)" rx="2" ry="2" />
<text  x="950.89" y="575.5" ></text>
</g>
<g >
<title>WebExtensions (1 samples, 0.18%)</title><rect x="14.4" y="709" width="2.1" height="15.0" fill="rgb(225,161,10)" rx="2" ry="2" />
<text  x="17.36" y="719.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.55%)</title><rect x="433.1" y="549" width="6.6" height="15.0" fill="rgb(222,34,26)" rx="2" ry="2" />
<text  x="436.14" y="559.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.37%)</title><rect x="1155.1" y="629" width="4.4" height="15.0" fill="rgb(215,186,17)" rx="2" ry="2" />
<text  x="1158.10" y="639.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.92%)</title><rect x="31.8" y="501" width="10.9" height="15.0" fill="rgb(254,42,18)" rx="2" ry="2" />
<text  x="34.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.18%)</title><rect x="1157.3" y="549" width="2.2" height="15.0" fill="rgb(218,167,20)" rx="2" ry="2" />
<text  x="1160.28" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.37%)</title><rect x="971.9" y="485" width="4.3" height="15.0" fill="rgb(240,37,16)" rx="2" ry="2" />
<text  x="974.89" y="495.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (17 samples, 3.14%)</title><rect x="976.2" y="549" width="37.1" height="15.0" fill="rgb(248,223,54)" rx="2" ry="2" />
<text  x="979.25" y="559.5" >gen..</text>
</g>
<g >
<title>intel_pmu_enable_all (16 samples, 2.96%)</title><rect x="978.4" y="437" width="34.9" height="15.0" fill="rgb(247,210,36)" rx="2" ry="2" />
<text  x="981.43" y="447.5" >in..</text>
</g>
<g >
<title>start_kernel (7 samples, 1.29%)</title><rect x="1174.7" y="645" width="15.3" height="15.0" fill="rgb(229,32,2)" rx="2" ry="2" />
<text  x="1177.73" y="655.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.18%)</title><rect x="950.1" y="597" width="2.2" height="15.0" fill="rgb(242,145,32)" rx="2" ry="2" />
<text  x="953.07" y="607.5" ></text>
</g>
<g >
<title>__new_sem_wait_slow.constprop.0 (1 samples, 0.18%)</title><rect x="945.7" y="693" width="2.2" height="15.0" fill="rgb(225,18,7)" rx="2" ry="2" />
<text  x="948.71" y="703.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.92%)</title><rect x="1174.7" y="469" width="10.9" height="15.0" fill="rgb(233,123,0)" rx="2" ry="2" />
<text  x="1177.73" y="479.5" ></text>
</g>
</g>
</svg>
